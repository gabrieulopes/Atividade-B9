

5.	Crie uma classe Agenda que armazena informações de contatos. A classe deve ter métodos para adicionar um contato, remover um contato e imprimir a lista de contatos. Escreva um programa em Java que usa a classe Agenda para criar uma agenda telefônica.
import java.util.ArrayList;
import java.util.Scanner;

public class Agenda {
    private ArrayList<String> contatos;

    public Agenda() {
        contatos = new ArrayList<>();
    }

    public void adicionarContato(String contato) {
        contatos.add(contato);
    }

    public void removerContato(String contato) {
        contatos.remove(contato);
    }

    public void imprimirContatos() {
        System.out.println("Lista de contatos:");
        for (String contato : contatos) {
            System.out.println(contato);
        }
    }

    public static void main(String[] args) {
        Agenda agenda = new Agenda();
        Scanner scanner = new Scanner(System.in);
        boolean sair = false;

        while (!sair) {
            System.out.println("Selecione uma opção:");
            System.out.println("1 - Adicionar contato");
            System.out.println("2 - Remover contato");
            System.out.println("3 - Imprimir lista de contatos");
            System.out.println("4 - Sair");

            int opcao = scanner.nextInt();
            scanner.nextLine(); // consumir o enter deixado pelo nextInt()

            switch (opcao) {
                case 1:
                    System.out.println("Digite o nome do contato:");
                    String nomeContato = scanner.nextLine();
                    agenda.adicionarContato(nomeContato);
                    System.out.println("Contato adicionado com sucesso!");
                    break;
                case 2:
                    System.out.println("Digite o nome do contato a ser removido:");
                    String contatoRemover = scanner.nextLine();
                    agenda.removerContato(contatoRemover);
                    System.out.println("Contato removido com sucesso!");
                    break;
                case 3:
                    agenda.imprimirContatos();
                    break;
                case 4:
                    System.out.println("Saindo...");
                    sair = true;
                    break;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }
}


6.	Escreva um programa em Java que recebe uma sequência de números do usuário e imprime o número que mais se repete.

import java.util.*;

public class MaiorFrequencia {

    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);

        System.out.print("Digite a sequência de números separados por espaço: ");
        String[] numerosString = input.nextLine().split(" ");

        int[] numeros = new int[numerosString.length];

        for (int i = 0; i < numerosString.length; i++) {
            numeros[i] = Integer.parseInt(numerosString[i]);
        }

        Map<Integer, Integer> frequencia = new HashMap<Integer, Integer>();

        for (int numero : numeros) {
            if (frequencia.containsKey(numero)) {
                frequencia.put(numero, frequencia.get(numero) + 1);
            } else {
                frequencia.put(numero, 1);
            }
        }

        int maiorFrequencia = 0;
        int numeroMaisFrequente = 0;

        for (Map.Entry<Integer, Integer> entry : frequencia.entrySet()) {
            int numero = entry.getKey();
            int freq = entry.getValue();
            if (freq > maiorFrequencia) {
                maiorFrequencia = freq;
                numeroMaisFrequente = numero;
            }
        }

        System.out.println("O número que mais se repete é: " + numeroMaisFrequente);

        input.close();
    }
}



  8.	Escreva um programa em Java que recebe dois números inteiros do usuário e imprime todos os números primos no intervalo entre eles.

import java.util.Scanner;

public class NumerosPrimos {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Digite o primeiro número: ");
        int num1 = sc.nextInt();

        System.out.print("Digite o segundo número: ");
        int num2 = sc.nextInt();

        System.out.printf("Os números primos entre %d e %d são: ", num1, num2);
        for (int i = num1; i <= num2; i++) {
            if (isPrimo(i)) {
                System.out.print(i + " ");
            }
        }

        sc.close();
    }

    public static boolean isPrimo(int n) {
        if (n <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
}

10.	Crie uma classe "Funcionario" com os atributos "nome", "salario" e "cargo". Escreva um método que determine o imposto de renda a ser pago pelo funcionário, considerando que a alíquota é de 10% para salários até R$ 1.500,00 e de 20% para salários acima disso.


public class Funcionario {
    private String nome;
    private double salario;
    private String cargo;

    public Funcionario(String nome, double salario, String cargo) {
        this.nome = nome;
        this.salario = salario;
        this.cargo = cargo;
    }

    public double calcularImpostoDeRenda() {
        if (salario <= 1500) {
            return salario * 0.1;
        } else {
            return salario * 0.2;
        }
    }


}

11.	Escreva um programa que leia uma sequência de números inteiros e imprima a soma dos números pares e a soma dos números ímpares. Utilize um loop for e estruturas condicionais

import java.util.Scanner;

public class SomaParesEImpares {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite a quantidade de números a serem lidos: ");
        int quantidade = scanner.nextInt();

        int somaPares = 0;
        int somaImpares = 0;

        for (int i = 1; i <= quantidade; i++) {
            System.out.print("Digite o " + i + "º número: ");
            int numero = scanner.nextInt();

            if (numero % 2 == 0) {
                somaPares += numero;
            } else {
                somaImpares += numero;
            }
        }

        System.out.println("A soma dos números pares é: " + somaPares);
        System.out.println("A soma dos números ímpares é: " + somaImpares);
    }
}

12.	Crie uma classe "ContaBancaria" com os atributos "titular", "saldo" e "limite". Escreva um método que permita sacar dinheiro da conta, considerando que o saldo não pode ficar negativo e que o valor do saque não pode ser maior que o saldo mais o limite.

public class ContaBancaria {
    private String titular;
    private double saldo;
    private double limite;

    public ContaBancaria(String titular, double saldo, double limite) {
        this.titular = titular;
        this.saldo = saldo;
        this.limite = limite;
    }

    public boolean sacar(double valor) {
        if (valor > (saldo + limite)) {
            System.out.println("Saque não permitido. Valor solicitado é maior que o saldo e o limite da conta.");
            return false;
        }

        if (valor > saldo) {
            System.out.println("Saque não permitido. Valor solicitado é maior que o saldo da conta.");
            return false;
        }

        saldo -= valor;
        System.out.println("Saque realizado com sucesso. Novo saldo da conta: " + saldo);
        return true;
    }

}

13.	Escreva um programa que leia um número inteiro positivo e imprima todos os números primos menores ou iguais a ele. Utilize um loop while e estruturas condicionais.

import java.util.Scanner;

public class NumerosPrimos {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print("Digite um número inteiro positivo: ");
        int n = input.nextInt();

        int i = 2;
        while (i <= n) {
            boolean ehPrimo = true;
            int j = 2;
            while (j <= i / 2) {
                if (i % j == 0) {
                    ehPrimo = false;
                    break;
                }
                j++;
            }
            if (ehPrimo) {
                System.out.print(i + " ");
            }
            i++;
        }
    }
}
15.	Escreva um programa que leia um número inteiro e determine se ele é primo ou não. Utilize um loop for e estruturas condicionais.

import java.util.Scanner;

public class NumeroPrimo {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print("Digite um número inteiro: ");
        int n = input.nextInt();

        boolean ehPrimo = true;

        if (n <= 1) {
            ehPrimo = false;
        } else {
            for (int i = 2; i <= n/2; i++) {
                if (n % i == 0) {
                    ehPrimo = false;
                    break;
                }
            }
        }

        if (ehPrimo) {
            System.out.println(n + " é primo");
        } else {
            System.out.println(n + " não é primo");
        }
    }
}

17.	Escreva um programa que calcule e imprima a soma dos números pares entre 1 e 100 utilizando um loop for

public class SomaPares {
    public static void main(String[] args) {
        int soma = 0;

        for (int i = 2; i <= 100; i += 2) {
            soma += i;
        }

        System.out.println("A soma dos números pares entre 1 e 100 é: " + soma);
    }
}

19.	Escreva um programa que leia um número inteiro e determine se ele é um número primo de Mersenne ou não. Um número primo de Mersenne é um número primo da forma 2^p - 1, onde p é também um número primo. Utilize estruturas condicionais e loops.

import java.util.Scanner;

public class NumeroPrimoMersenne {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.print("Digite um número inteiro: ");
        int numero = input.nextInt();

        int p = 2;
        int mersenne = 3;

        while (mersenne <= numero) {
            boolean primo = true;

            for (int i = 2; i <= Math.sqrt(p); i++) {
                if (p % i == 0) {
                    primo = false;
                    break;
                }
            }

            if (primo) {
                mersenne = (int) Math.pow(2, p) - 1;

                if (mersenne == numero) {
                    System.out.println(numero + " é um número primo de Mersenne!");
                    return;
                }
            }

            p++;
        }

        System.out.println(numero + " não é um número primo de Mersenne.");
    }
}

21.	Escreva um programa que leia uma sequência de números inteiros e determine o maior e o menor número da sequência. Utilize estruturas condicionais

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Digite a quantidade de números da sequência: ");
        int quantidade = scanner.nextInt();
        
        int maior = Integer.MIN_VALUE;
        int menor = Integer.MAX_VALUE;
        
        for (int i = 1; i <= quantidade; i++) {
            System.out.printf("Digite o %dº número: ", i);
            int numero = scanner.nextInt();
            
            if (numero > maior) {
                maior = numero;
            }
            
            if (numero < menor) {
                menor = numero;
            }
        }
        
        System.out.printf("O maior número da sequência é: %d%n", maior);
        System.out.printf("O menor número da sequência é: %d%n", menor);
    }
}

22.	Crie uma classe "Triangulo" com os atributos "lado1", "lado2" e "lado3". Escreva um método que determine se o triângulo é equilátero, isósceles ou escaleno.

public class Triangulo {
    private double lado1;
    private double lado2;
    private double lado3;

    public Triangulo(double lado1, double lado2, double lado3) {
        this.lado1 = lado1;
        this.lado2 = lado2;
        this.lado3 = lado3;
    }

    public String tipoTriangulo() {
        if (lado1 == lado2 && lado1 == lado3) {
            return "equilátero";
        } else if (lado1 == lado2 || lado1 == lado3 || lado2 == lado3) {
            return "isósceles";
        } else {
            return "escaleno";
        }
    }
}

23.	Escreva um programa que leia um número inteiro e imprima a tabuada desse número de 1 a 10. Utilize um loop for.

import java.util.Scanner;

public class Tabuada {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        
        System.out.print("Digite um número inteiro: ");
        int num = input.nextInt();
        
        for (int i = 1; i <= 10; i++) {
            int result = num * i;
            System.out.println(num + " x " + i + " = " + result);
        }
        
        input.close();
    }
}


62.	Escreva um programa que leia uma sequência de números e determine quantos números são pares e maiores que 10.

import java.util.Scanner;

public class NumerosParesMaioresQueDez {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int num, pares = 0, maioresQueDez = 0;
        
        System.out.print("Digite a quantidade de números: ");
        int qtdNumeros = sc.nextInt();
        
        for (int i = 1; i <= qtdNumeros; i++) {
            System.out.print("Digite o " + i + "º número: ");
            num = sc.nextInt();
            
            if (num % 2 == 0) {
                pares++;
                
                if (num > 10) {
                    maioresQueDez++;
                }
            }
        }
        
        System.out.println("Quantidade de números pares: " + pares);
        System.out.println("Quantidade de números pares e maiores que 10: " + maioresQueDez);
        
        sc.close();
    }
}

63.	Escreva um programa que leia uma sequência de números e determine quantos números são ímpares e menores que 50.

import java.util.Scanner;

public class NumerosImparesMenoresQue50 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        int numero, contImpares = 0;
        
        System.out.print("Digite um número (digite 0 para sair): ");
        numero = sc.nextInt();
        
        while (numero != 0) {
            if (numero % 2 != 0 && numero < 50) {
                contImpares++;
            }
            
            System.out.print("Digite um número (digite 0 para sair): ");
            numero = sc.nextInt();
        }
        
        System.out.println("Quantidade de números ímpares menores que 50: " + contImpares);
        
        sc.close();
    }
}



